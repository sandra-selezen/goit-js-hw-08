{"mappings":"AAAA,MAAMA,EAAYC,SAASC,cAAc,mBA2BzC,WACI,IAAIC,EAAeC,aAAaC,QA3BX,uBA4BjBF,IACAA,EAAeG,KAAKC,MAAMJ,GAC1BK,OAAOC,QAAQN,GAAcO,SAAQ,EAAEC,EAAMC,MACzCZ,EAAUa,SAASF,GAAMC,MAAQA,CAAK,I,CA7BlDE,GAEAd,EAAUe,iBAAiB,SAG3B,SAAqBC,GACjBA,EAAMC,iBAEN,IAAId,EAAeC,aAAaC,QAVX,uBAWrBF,EAAeA,EAAeG,KAAKC,MAAMJ,GAAgB,GACzDA,EAAaa,EAAME,OAAOP,MAAQK,EAAME,OAAON,MAC/CR,aAAae,QAbQ,sBAakBb,KAAKc,UAAUjB,G,IAR1DH,EAAUe,iBAAiB,UAW3B,SAAsBC,GAClBA,EAAMC,iBAEN,IAAId,EAAeC,aAAaC,QAnBX,uBAoBrBgB,QAAQC,IAAInB,EAAeG,KAAKC,MAAMJ,IAEtCa,EAAMO,cAAcC,QACpBpB,aAAaqB,WAvBQ,sB","sources":["src/js/03-feedback.js"],"sourcesContent":["const inputForm = document.querySelector('.feedback-form');\nconst LOCALSTORAGE_KEY = \"feedback-form-state\";\n\ninitForm();\n\ninputForm.addEventListener('input', onFormInput);\ninputForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormInput(event) {\n    event.preventDefault();\n\n    let filledFields = localStorage.getItem(LOCALSTORAGE_KEY);\n    filledFields = filledFields ? JSON.parse(filledFields) : {};\n    filledFields[event.target.name] = event.target.value;\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(filledFields));\n};\n\nfunction onFormSubmit(event) {\n    event.preventDefault();\n    \n    let filledFields = localStorage.getItem(LOCALSTORAGE_KEY);\n    console.log(filledFields = JSON.parse(filledFields));\n\n    event.currentTarget.reset();\n    localStorage.removeItem(LOCALSTORAGE_KEY);\n};\n\nfunction initForm() {\n    let filledFields = localStorage.getItem(LOCALSTORAGE_KEY);\n    if (filledFields) {\n        filledFields = JSON.parse(filledFields);\n        Object.entries(filledFields).forEach(([name, value]) => {\n            inputForm.elements[name].value = value;\n        });\n    }\n};\n\n/*\n1. Track the input event on the form, and each time write to local storage an object with the email and message fields, \nin which you save the current values of the form fields. \nLet the key for the storage be the \"feedback-form-state\" string.\n2. When loading the page, check the state of the storage, and if it stores some data, \nuse it to fill in the form fields. Otherwise, the fields must be empty.\n3. When submitting the form, clear the storage and form fields, \nand also display the object with the email and message fields and their current values in the console.\n4. Make sure that the storage is updated no more than once every 500 milliseconds. \nTo do this, add to the project and use the lodash.throttle library.\n*/\n"],"names":["$945622fd0f572e60$var$inputForm","document","querySelector","filledFields","localStorage","getItem","JSON","parse","Object","entries","forEach","name","value","elements","$945622fd0f572e60$var$initForm","addEventListener","event","preventDefault","target","setItem","stringify","console","log","currentTarget","reset","removeItem"],"version":3,"file":"03-feedback.d73c230d.js.map"}